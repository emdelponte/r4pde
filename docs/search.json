[{"path":"https://emdelponte.github.io/r4pde/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emerson Del Ponte. Author, maintainer.","code":""},{"path":"https://emdelponte.github.io/r4pde/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Del Ponte E (2025). r4pde: Companion R Plant Disease Epidemiology Book. R package version 0.1.0, https://github.com/emdelponte/r4pde.","code":"@Manual{,   title = {r4pde: Companion to R for Plant Disease Epidemiology Book},   author = {Emerson {Del Ponte}},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/emdelponte/r4pde}, }"},{"path":"https://emdelponte.github.io/r4pde/index.html","id":"r4pde-","dir":"","previous_headings":"","what":"r4pde","title":"r4pde","text":"R package developed companion book R Plant Disease Epidemiology. provides access suite specialized R functions datasets tailored teaching analyzing plant disease epidemiology. package supports researchers, students, practitioners offering tools disease quantification, spatial analysis predictive modeling.","code":""},{"path":"https://emdelponte.github.io/r4pde/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"r4pde","text":"Install stable release CRAN. development version {r4pde} available GitHub. install along dependencies (including Bioconductor packages), use pak package: Alternatively, using remotes: Note: package depends Icens, available Bioconductor. pak remotes install automatically needed.","code":"install.packages(\"r4pde\") if (!requireNamespace(\"pak\", quietly = TRUE)) install.packages(\"pak\") pak::pkg_install(\"emdelponte/r4pde\") if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\") remotes::install_github(\"emdelponte/r4pde\")"},{"path":"https://emdelponte.github.io/r4pde/index.html","id":"reporting-issues","dir":"","previous_headings":"","what":"Reporting Issues","title":"r4pde","text":"Please report bugs issues via GitHub issue tracker.","code":""},{"path":"https://emdelponte.github.io/r4pde/index.html","id":"license-and-citation","dir":"","previous_headings":"","what":"License and Citation","title":"r4pde","text":"package released MIT license. cite package, please use:","code":"citation(\"r4pde\")"},{"path":"https://emdelponte.github.io/r4pde/reference/AFSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of foci structure and dynamics (AFSD) — AFSD","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"function performs analysis simple method introduced Nelson (1996) expanded Laranjeira et al. (1998). function assumes dataframe supplied input columns 'x', 'y', '', 'x' 'y' spatial coordinates '' disease indicator variable (1 diseased, otherwise 0). function performs several steps including filtering rows '' 1, converting adjacency matrix, creating foci using igraph. calculates various statistics foci returns list.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/AFSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"","code":"AFSD(df)"},{"path":"https://emdelponte.github.io/r4pde/reference/AFSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"df dataframe containing least three columns: 'x', 'y', ''. 'x' 'y' represent spatial coordinates '' disease indicator (1 diseased, otherwise 0).","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/AFSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"list containing: cluster_summary2: dataframe summarizing number size foci, proportions diseased plants. cluster_df: dataframe containing foci information, including size number rows columns foci. df_clustered: original dataframe added 'focus_id' column, showing foci row belongs .","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/AFSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"","code":"# Generate a sample dataframe set.seed(123) df <- data.frame(x = sample(1:100, 500, replace = TRUE),                  y = sample(1:100, 500, replace = TRUE),                  i = sample(0:1, 500, replace = TRUE, prob = c(0.7, 0.3)))  # Perform the AFSD result <- AFSD(df)"},{"path":"https://emdelponte.github.io/r4pde/reference/BPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"function calculates Binary Power Law (BPL) parameters spatial disease patterns, fits linear model, performs hypothesis test slope.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"","code":"BPL(data)"},{"path":"https://emdelponte.github.io/r4pde/reference/BPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"data data frame containing following columns: field: field identifier. n: number observations quadrat. : incidence count quadrat.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"list containing following elements: summary: data frame summarizing input data field, including total observations (n_total), mean incidence (incidence_mean), observed variance (V), binomial variance (Vbin). model_summary: summary linear model fitted log-transformed variances. hypothesis_test: result hypothesis test slope equal 1. ln_Ap: intercept linear model, representing natural logarithm parameter \\( A_p \\). slope: slope linear model.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BPL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"function performs following steps: Summarizes data field calculate total number observations (n_total), mean incidence (incidence_mean), observed variance (V), binomial variance (Vbin). Log-transforms variances. Fits linear model log-transformed variances. Tests hypothesis slope linear model equal 1.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/BPL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"","code":"# \\donttest{ # Example usage with a sample data frame result <- BPL(FHBWheat) print(result$summary) #> # A tibble: 153 × 7 #>    field n_total incidence_mean      V   Vbin log_V log_Vbin #>    <int>   <int>          <dbl>  <dbl>  <dbl> <dbl>    <dbl> #>  1     1     200          0.52  0.0333 0.0250 -3.40    -3.69 #>  2     2     200          0.535 0.0529 0.0249 -2.94    -3.69 #>  3     3     200          0.3   0.0274 0.021  -3.60    -3.86 #>  4     4     200          0.42  0.0206 0.0244 -3.88    -3.71 #>  5     5     200          0.35  0.01   0.0228 -4.61    -3.78 #>  6     6     200          0.365 0.0466 0.0232 -3.07    -3.76 #>  7     7     200          0.315 0.0245 0.0216 -3.71    -3.84 #>  8     8     200          0.505 0.0352 0.0250 -3.35    -3.69 #>  9     9     200          0.56  0.0204 0.0246 -3.89    -3.70 #> 10    10     200          0.43  0.0243 0.0245 -3.72    -3.71 #> # ℹ 143 more rows print(result$model_summary) #>  #> Call: #> lm(formula = log_V ~ log_Vbin, data = df_summary) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -1.06015 -0.23599 -0.00801  0.25043  1.80832  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   0.3158     0.1860   1.698   0.0916 .   #> log_Vbin      1.0205     0.0420  24.295   <2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 0.3935 on 151 degrees of freedom #> Multiple R-squared:  0.7963,\tAdjusted R-squared:  0.7949  #> F-statistic: 590.3 on 1 and 151 DF,  p-value: < 2.2e-16 #>  print(result$hypothesis_test) #>  #> Linear hypothesis test: #> log_Vbin = 1 #>  #> Model 1: restricted model #> Model 2: log_V ~ log_Vbin #>  #>   Res.Df    RSS Df Sum of Sq      F Pr(>F) #> 1    152 23.422                            #> 2    151 23.385  1  0.036968 0.2387 0.6259 print(paste(\"ln(Ap):\", result$ln_Ap)) #> [1] \"ln(Ap): 0.315806312326611\" print(paste(\"Slope (b):\", result$slope)) #> [1] \"Slope (b): 1.02052263172857\" # }"},{"path":"https://emdelponte.github.io/r4pde/reference/BlastWheat.html","id":null,"dir":"Reference","previous_headings":"","what":"BlastWheat dataset — BlastWheat","title":"BlastWheat dataset — BlastWheat","text":"Wheat blast dataset severity weather covariates.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BlastWheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BlastWheat dataset — BlastWheat","text":"","code":"BlastWheat"},{"path":"https://emdelponte.github.io/r4pde/reference/BlastWheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BlastWheat dataset — BlastWheat","text":"data frame following columns: heading Date heading inc_mean Mean incidence index_mean FHB index mean latitude Latitude coordinate location Experimental site name longitude Longitude coordinate state Brazilian state study Study ID code year Crop year yld_mean Mean yield","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BlastWheat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BlastWheat dataset — BlastWheat","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BudBlightSoybean.html","id":null,"dir":"Reference","previous_headings":"","what":"BudBlightSoybean dataset — BudBlightSoybean","title":"BudBlightSoybean dataset — BudBlightSoybean","text":"Soybean bud blight incidence experimental blocks.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BudBlightSoybean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BudBlightSoybean dataset — BudBlightSoybean","text":"","code":"BudBlightSoybean"},{"path":"https://emdelponte.github.io/r4pde/reference/BudBlightSoybean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"BudBlightSoybean dataset — BudBlightSoybean","text":"data frame following columns: block Block number time Time point assessment treat Treatment name y Incidence severity value","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/BudBlightSoybean.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"BudBlightSoybean dataset — BudBlightSoybean","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival analysis for quantitative ordinal scale data. — CompMuCens","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"Survival analysis quantitative ordinal scale data.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"","code":"CompMuCens(dat, scale, grade = TRUE, ckData = FALSE)"},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"dat Data frame containing data processed. scale numeric vector indicating scale order classes. grade Logical. TRUE, uses class value. FALSE, uses NPE (Non-Parametric Estimate). ckData Logical. TRUE, returns input data along results. FALSE, returns results.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"Returns list containing score statistic, hypothesis tests, adjusted significance level, conclusion based pairwise comparisons.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"assist plant pathologists analyzing quantitative ordinal scale data encourage uptake interval-censored analysis method, Chiang collaborators developed function provided comprehensive explanation program code used implement class ratings analyzed method repository: https://github.com/StatisticalMethodsinPlantProtection/CompMuCens According results paper, method can applied reduce risk type II errors considering quantitative ordinal data, widely used plant pathology related disciplines.function starts converting data censored data format performs multiple pairwise comparisons determine significance using score statistic method.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"Chiang, K.S., Chang, Y.M., Liu, H.., Lee, J.Y., El Jarroudi, M. Bock, C., 2023. Survival Analysis Basis Test Hypotheses Using Quantitative Ordinal Scale Disease Severity Data. Phytopathology, press. Available : https://apsjournals.apsnet.org/doi/abs/10.1094/PHYTO-02-23-0055-R","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/CompMuCens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"","code":"# Entering your data as ordinal rating scores trAs=c(5,4,2,5,5,4,4,2,5,2,2,3,4,3,2,2,6,2,2,4,2,4,2,4,5,3,4,2,2,3) trBs=c(5,3,2,4,4,5,4,5,4,4,6,4,5,5,5,2,6,2,3,5,2,6,4,3,2,5,3,5,4,5) trCs=c(2,3,1,4,1,1,4,1,1,3,2,1,4,1,1,2,5,2,1,3,1,4,2,2,2,4,2,3,2,2) trDs=c(5,5,4,5,5,6,6,4,6,4,3,5,5,6,4,6,5,6,5,4,5,5,5,3,5,6,5,5,5,6) # Data shaping into input format inputData = data.frame(treatment=c(rep(\"A\",30),rep(\"B\",30),rep(\"C\",30), rep(\"D\",30)), x=c(trAs, trBs, trCs, trDs)) # Perform analysis using CompMuCens() function CompMuCens(dat=inputData, scale=c(0,3,6,12,25,50,75,88,94,97,100,100),ckData=TRUE) #> $inputData #>     treatment ClassValue intervals #> 1           A          5  [12, 25] #> 2           A          4  [ 6, 12] #> 3           A          2  [ 0,  3] #> 4           A          5  [12, 25] #> 5           A          5  [12, 25] #> 6           A          4  [ 6, 12] #> 7           A          4  [ 6, 12] #> 8           A          2  [ 0,  3] #> 9           A          5  [12, 25] #> 10          A          2  [ 0,  3] #> 11          A          2  [ 0,  3] #> 12          A          3  [ 3,  6] #> 13          A          4  [ 6, 12] #> 14          A          3  [ 3,  6] #> 15          A          2  [ 0,  3] #> 16          A          2  [ 0,  3] #> 17          A          6  [25, 50] #> 18          A          2  [ 0,  3] #> 19          A          2  [ 0,  3] #> 20          A          4  [ 6, 12] #> 21          A          2  [ 0,  3] #> 22          A          4  [ 6, 12] #> 23          A          2  [ 0,  3] #> 24          A          4  [ 6, 12] #> 25          A          5  [12, 25] #> 26          A          3  [ 3,  6] #> 27          A          4  [ 6, 12] #> 28          A          2  [ 0,  3] #> 29          A          2  [ 0,  3] #> 30          A          3  [ 3,  6] #> 31          B          5  [12, 25] #> 32          B          3  [ 3,  6] #> 33          B          2  [ 0,  3] #> 34          B          4  [ 6, 12] #> 35          B          4  [ 6, 12] #> 36          B          5  [12, 25] #> 37          B          4  [ 6, 12] #> 38          B          5  [12, 25] #> 39          B          4  [ 6, 12] #> 40          B          4  [ 6, 12] #> 41          B          6  [25, 50] #> 42          B          4  [ 6, 12] #> 43          B          5  [12, 25] #> 44          B          5  [12, 25] #> 45          B          5  [12, 25] #> 46          B          2  [ 0,  3] #> 47          B          6  [25, 50] #> 48          B          2  [ 0,  3] #> 49          B          3  [ 3,  6] #> 50          B          5  [12, 25] #> 51          B          2  [ 0,  3] #> 52          B          6  [25, 50] #> 53          B          4  [ 6, 12] #> 54          B          3  [ 3,  6] #> 55          B          2  [ 0,  3] #> 56          B          5  [12, 25] #> 57          B          3  [ 3,  6] #> 58          B          5  [12, 25] #> 59          B          4  [ 6, 12] #> 60          B          5  [12, 25] #> 61          C          2  [ 0,  3] #> 62          C          3  [ 3,  6] #> 63          C          1         0 #> 64          C          4  [ 6, 12] #> 65          C          1         0 #> 66          C          1         0 #> 67          C          4  [ 6, 12] #> 68          C          1         0 #> 69          C          1         0 #> 70          C          3  [ 3,  6] #> 71          C          2  [ 0,  3] #> 72          C          1         0 #> 73          C          4  [ 6, 12] #> 74          C          1         0 #> 75          C          1         0 #> 76          C          2  [ 0,  3] #> 77          C          5  [12, 25] #> 78          C          2  [ 0,  3] #> 79          C          1         0 #> 80          C          3  [ 3,  6] #> 81          C          1         0 #> 82          C          4  [ 6, 12] #> 83          C          2  [ 0,  3] #> 84          C          2  [ 0,  3] #> 85          C          2  [ 0,  3] #> 86          C          4  [ 6, 12] #> 87          C          2  [ 0,  3] #> 88          C          3  [ 3,  6] #> 89          C          2  [ 0,  3] #> 90          C          2  [ 0,  3] #> 91          D          5  [12, 25] #> 92          D          5  [12, 25] #> 93          D          4  [ 6, 12] #> 94          D          5  [12, 25] #> 95          D          5  [12, 25] #> 96          D          6  [25, 50] #> 97          D          6  [25, 50] #> 98          D          4  [ 6, 12] #> 99          D          6  [25, 50] #> 100         D          4  [ 6, 12] #> 101         D          3  [ 3,  6] #> 102         D          5  [12, 25] #> 103         D          5  [12, 25] #> 104         D          6  [25, 50] #> 105         D          4  [ 6, 12] #> 106         D          6  [25, 50] #> 107         D          5  [12, 25] #> 108         D          6  [25, 50] #> 109         D          5  [12, 25] #> 110         D          4  [ 6, 12] #> 111         D          5  [12, 25] #> 112         D          5  [12, 25] #> 113         D          5  [12, 25] #> 114         D          3  [ 3,  6] #> 115         D          5  [12, 25] #> 116         D          6  [25, 50] #> 117         D          5  [12, 25] #> 118         D          5  [12, 25] #> 119         D          5  [12, 25] #> 120         D          6  [25, 50] #>  #> $U.Score #> # A tibble: 4 × 2 #>   treatment  score #>   <chr>      <dbl> #> 1 D         -15.1  #> 2 B          -4.54 #> 3 A           4.23 #> 4 C          15.4  #>  #> $Hypothesis.test #> # A tibble: 3 × 4 #>   treat1 treat2 `p-value for H0: treat1 <= treat2` p-value for H0: treat1 = tr…¹ #>   <chr>  <chr>                               <dbl> <lgl>                         #> 1 D      B                                0.00188  NA                            #> 2 B      A                                0.0113   NA                            #> 3 A      C                                0.000746 NA                            #> # ℹ abbreviated name: ¹​`p-value for H0: treat1 = treat2` #>  #> $adj.Signif #> [1] 0.01666667 #>  #> $Conclusion #> [1] \"c(\\\"D>B\\\", \\\">A\\\", \\\">C\\\")\" #>"},{"path":"https://emdelponte.github.io/r4pde/reference/DSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"function calculates Disease Severity Index (DSI) based provided unit, class, maximum class value. DSI computed aggregating classes, calculating weights multiplying frequency class class , dividing sum weights product total number entries maximum class value, multiplying 100.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/DSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"","code":"DSI(unit, class, max)"},{"path":"https://emdelponte.github.io/r4pde/reference/DSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"unit vector representing units. class vector representing classes corresponding units. max numeric value representing maximum possible class value.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/DSI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"Returns single numeric value representing DSI.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/DSI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"","code":"# Example usage: unit <- c(1, 2, 3, 4, 5, 6) class <- c(1, 2, 1, 2, 3, 1) max <- 3 DSI(unit, class, max) #> [1] 55.55556"},{"path":"https://emdelponte.github.io/r4pde/reference/DSI2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"function calculates Disease Severity Index (DSI) given vector classes, vector frequencies, maximum possible class value. DSI calculated weighted sum class values, class multiplied corresponding frequency, divided product total frequency maximum class value, finally multiplied 100 get percentage.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/DSI2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"","code":"DSI2(class, freq, max)"},{"path":"https://emdelponte.github.io/r4pde/reference/DSI2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"class numeric vector representing classes. freq numeric vector representing frequency class. Must length 'class'. max numeric value representing maximum possible class value.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/DSI2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"Returns single numeric value representing DSI.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/DSI2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"","code":"DSI2(c(0, 1, 2, 3, 4), c(2, 0, 5, 0, 5), 4) #> [1] 62.5"},{"path":"https://emdelponte.github.io/r4pde/reference/DidymellaWatermelon.html","id":null,"dir":"Reference","previous_headings":"","what":"DidymellaWatermelon dataset — DidymellaWatermelon","title":"DidymellaWatermelon dataset — DidymellaWatermelon","text":"Assessment Didymella symptoms watermelon plots.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/DidymellaWatermelon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DidymellaWatermelon dataset — DidymellaWatermelon","text":"","code":"DidymellaWatermelon"},{"path":"https://emdelponte.github.io/r4pde/reference/DidymellaWatermelon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DidymellaWatermelon dataset — DidymellaWatermelon","text":"data frame : EW_row Row position (east–west) NS_col Column position (north–south) dap Days planting severity Disease severity","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/DidymellaWatermelon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"DidymellaWatermelon dataset — DidymellaWatermelon","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/FHBWheat.html","id":null,"dir":"Reference","previous_headings":"","what":"FHBWheat dataset — FHBWheat","title":"FHBWheat dataset — FHBWheat","text":"Fusarium head blight quadrat assessments wheat.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/FHBWheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FHBWheat dataset — FHBWheat","text":"","code":"FHBWheat"},{"path":"https://emdelponte.github.io/r4pde/reference/FHBWheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FHBWheat dataset — FHBWheat","text":"data frame : field Field identifier Row position n Column position quadrat Quadrat ID season Crop season","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/FHBWheat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"FHBWheat dataset — FHBWheat","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/FusariumBanana.html","id":null,"dir":"Reference","previous_headings":"","what":"FusariumBanana dataset — FusariumBanana","title":"FusariumBanana dataset — FusariumBanana","text":"Observations Fusarium symptoms banana fields.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/FusariumBanana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FusariumBanana dataset — FusariumBanana","text":"","code":"FusariumBanana"},{"path":"https://emdelponte.github.io/r4pde/reference/FusariumBanana.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FusariumBanana dataset — FusariumBanana","text":"data frame : field Field ID lat Latitude lon Longitude marker Infection marker presence","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/FusariumBanana.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"FusariumBanana dataset — FusariumBanana","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/RustSoybean.html","id":null,"dir":"Reference","previous_headings":"","what":"RustSoybean dataset — RustSoybean","title":"RustSoybean dataset — RustSoybean","text":"Soybean rust severity field metadata.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/RustSoybean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RustSoybean dataset — RustSoybean","text":"","code":"RustSoybean"},{"path":"https://emdelponte.github.io/r4pde/reference/RustSoybean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RustSoybean dataset — RustSoybean","text":"data frame : detection Detection score date epidemia Epidemic phase latitude Latitude local Location name longitude Longitude planting Planting date stage severity Disease severity","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/RustSoybean.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RustSoybean dataset — RustSoybean","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialAggregated.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatialAggregated dataset — SpatialAggregated","title":"SpatialAggregated dataset — SpatialAggregated","text":"Simulated aggregated spatial binary disease pattern.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialAggregated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatialAggregated dataset — SpatialAggregated","text":"","code":"SpatialAggregated"},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialAggregated.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SpatialAggregated dataset — SpatialAggregated","text":"data frame : x x-coordinate y y-coordinate","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialAggregated.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SpatialAggregated dataset — SpatialAggregated","text":"Simulated example","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialRandom.html","id":null,"dir":"Reference","previous_headings":"","what":"SpatialRandom dataset — SpatialRandom","title":"SpatialRandom dataset — SpatialRandom","text":"Simulated random spatial binary disease pattern.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialRandom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SpatialRandom dataset — SpatialRandom","text":"","code":"SpatialRandom"},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialRandom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SpatialRandom dataset — SpatialRandom","text":"data frame : x x-coordinate y y-coordinate","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/SpatialRandom.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SpatialRandom dataset — SpatialRandom","text":"Simulated example","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/WhiteMoldSoybean.html","id":null,"dir":"Reference","previous_headings":"","what":"WhiteMoldSoybean dataset — WhiteMoldSoybean","title":"WhiteMoldSoybean dataset — WhiteMoldSoybean","text":"National dataset white mold severity yield.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/WhiteMoldSoybean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WhiteMoldSoybean dataset — WhiteMoldSoybean","text":"","code":"WhiteMoldSoybean"},{"path":"https://emdelponte.github.io/r4pde/reference/WhiteMoldSoybean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"WhiteMoldSoybean dataset — WhiteMoldSoybean","text":"data frame : country Country name elevation Field elevation elevation_class Elevation class harvest_year Year harvest inc Incidence inc_check Check plot incidence inc_class Incidence class location Location name region Geographical region scl Soybean canopy layer season Crop season state State name study Study identifier treat Treatment applied yld Yield yld_check Yield untreated check yld_class Yield class","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/WhiteMoldSoybean.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"WhiteMoldSoybean dataset — WhiteMoldSoybean","text":"Del Ponte Lab internal data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the Number of Ones in Subareas of a Matrix — count_subareas","title":"Count the Number of Ones in Subareas of a Matrix — count_subareas","text":"function takes binary matrix (0s 1s) divides rectangular subareas, counting number ones . Subareas defined number rows columns specified user. matrix dimensions perfectly divisible subarea size, edge subareas may smaller.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the Number of Ones in Subareas of a Matrix — count_subareas","text":"","code":"count_subareas(matrix_data, sub_rows, sub_cols)"},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the Number of Ones in Subareas of a Matrix — count_subareas","text":"matrix_data matrix 0s 1s analyze. sub_rows Number rows subarea. sub_cols Number columns subarea.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the Number of Ones in Subareas of a Matrix — count_subareas","text":"matrix cell corresponds subarea contains count ones.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the Number of Ones in Subareas of a Matrix — count_subareas","text":"","code":"set.seed(123) mat <- matrix(sample(c(0, 1), 12 * 16, replace = TRUE), nrow = 16, ncol = 12) count_matrix <- count_subareas(mat, sub_rows = 3, sub_cols = 3) print(count_matrix) #>      [,1] [,2] [,3] [,4] #> [1,]    3    4    3    7 #> [2,]    3    3    6    6 #> [3,]    3    4    6    2 #> [4,]    6    4    4    5 #> [5,]    3    6    7    4 #> [6,]    2    1    1    0"},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas_random.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Subgrid Sampling of a Binary Matrix — count_subareas_random","title":"Random Subgrid Sampling of a Binary Matrix — count_subareas_random","text":"Randomly samples submatrices (quadrats) specified size binary matrix, returns positions, submatrices, count 1s sampled quadrat.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas_random.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Subgrid Sampling of a Binary Matrix — count_subareas_random","text":"","code":"count_subareas_random(matrix_data, sub_rows = 3, sub_cols = 3, n_samples = 100)"},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas_random.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Subgrid Sampling of a Binary Matrix — count_subareas_random","text":"matrix_data binary matrix 0s 1s. sub_rows Number rows subgrid sample. sub_cols Number columns subgrid sample. n_samples Number subgrid samples draw.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/count_subareas_random.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Subgrid Sampling of a Binary Matrix — count_subareas_random","text":"list sampled subgrids. element list : position Row column start position sample. submatrix sampled subgrid matrix. count Number 1s sampled submatrix.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/doublets.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Doublets Test — doublets.test","title":"Doublets Test — doublets.test","text":"Perform doublets test input data test aggregation clustering randomness.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/doublets.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Doublets Test — doublets.test","text":"","code":"doublets.test(x)"},{"path":"https://emdelponte.github.io/r4pde/reference/doublets.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Doublets Test — doublets.test","text":"x numeric vector representing input data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/doublets.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Doublets Test — doublets.test","text":"list elements Db (number doublets), EDb (expected number doublets), pvalue, result (either \"aggregation clustering\" \"randomness\").","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/doublets.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Doublets Test — doublets.test","text":"","code":"doublets.test(c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)) #> $Db #> [1] 2 #>  #> $EDb #> [1] 3 #>  #> $ZDb #> [1] -0.6454972 #>  #> $pvalue #> [1] 0.2593025 #>  #> $result #> [1] \"randomness\" #>"},{"path":"https://emdelponte.github.io/r4pde/reference/fit_gradients.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Gradient Models to Data — fit_gradients","title":"Fit Gradient Models to Data — fit_gradients","text":"function fits three gradient models (exponential, power, modified power) given data. ranks models based R-squared values returns diagnostic plots model.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/fit_gradients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Gradient Models to Data — fit_gradients","text":"","code":"fit_gradients(data, C = 1)"},{"path":"https://emdelponte.github.io/r4pde/reference/fit_gradients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Gradient Models to Data — fit_gradients","text":"data dataframe containing data, columns \"x\" representing distances \"Y\" representing corresponding measurements counts. C constant used modified power model. Defaults 1.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/fit_gradients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Gradient Models to Data — fit_gradients","text":"list containing: data input data, include additional column 'mod_x'. results_table table model parameters R-squared values. plot_exponential Diagnostic plot exponential model. plot_power Diagnostic plot power model. plot_modified_power Diagnostic plot modified power model. plot_exponential_original Plot original data exponential model fit. plot_power_original Plot original data power model fit. plot_modified_power_original Plot original data modified power model fit.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/fit_gradients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Gradient Models to Data — fit_gradients","text":"","code":"x <- c(0.8, 1.6, 2.4, 3.2, 4, 7.2, 12, 15.2, 21.6, 28.8) Y <- c(184.9, 113.3, 113.3, 64.1, 25, 8, 4.3, 2.5, 1, 0.8) grad1 <- data.frame(x = x, Y = Y) library(ggplot2) #> Warning: package ‘ggplot2’ was built under R version 4.4.1 mg <- fit_gradients(grad1, C = 0.4) mg$plot_power_original +   labs(title = \"\", x = \"Distance from focus (m)\", y = \"Count of lesions\")"},{"path":"https://emdelponte.github.io/r4pde/reference/get_nasapower.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"function downloads daily NASA POWER data specified weather variables specified number days around given date column multiple locations. includes progress bar show download progress.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/get_nasapower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"","code":"get_nasapower(   data,   days_around,   date_col,   pars = c(\"T2M\", \"RH2M\", \"PRECTOTCORR\", \"T2M_MAX\", \"T2M_MIN\", \"T2MDEW\") )"},{"path":"https://emdelponte.github.io/r4pde/reference/get_nasapower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"data data frame containing input data, including columns latitude, longitude, study identifier, date column. days_around integer specifying number days date date column download data. date_col character string specifying name date column data frame. pars character vector specifying weather variables fetch NASA POWER (default: c(\"T2M\", \"RH2M\", \"PRECTOTCORR\", \"T2M_MAX\", \"T2M_MIN\", \"T2MDEW\")).","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/get_nasapower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"data frame downloaded weather data NASA POWER, combined specified locations. Includes new variable study indicating study identifier input data. Returns empty data frame data retrieved.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/get_nasapower.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"function uses get_power function nasapower package fetch weather data range dates around specified date column location. progress bar shown data download process, results combined single data frame.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/join_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Spatial Join Count Statistics — join_count","title":"Test for Spatial Join Count Statistics — join_count","text":"function join_count calculates spatial join count statistics binary matrix, identifying patterns aggregation randomness.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/join_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Spatial Join Count Statistics — join_count","text":"","code":"join_count(matrix_data, verbose = TRUE)"},{"path":"https://emdelponte.github.io/r4pde/reference/join_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Spatial Join Count Statistics — join_count","text":"matrix_data binary matrix (elements 0 1) representing spatial distribution two types points: 0 healthy plants (H) 1 diseased plants (D). matrix reflects geographical distribution layout plants studied area. verbose Logical. TRUE (default), prints formatted message console.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/join_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Spatial Join Count Statistics — join_count","text":"comprehensive, rich-text formatted string results includes: Statistical counts specific binary sequences (e.g., \"01 10\", \"11\") Expected counts assumption Complete Spatial Randomness (CSR) Standard deviations Z-scores (ZHD \"01 10\" sequences, ZDD \"11\" sequences) Interpretation whether spatial distribution sequence type \"Aggregated\" \"Aggregated\" based Z-scores summary explaining implications statistics patterns return value aims provide clear understanding spatial arrangement's characteristics, aiding spatial analysis research.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/join_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for Spatial Join Count Statistics — join_count","text":"function conducts analysis first counting occurrence specific sequences (\"01 10\" \"11\" - equivalent HD DD) binary matrix. calculates expected values, standard deviations, Z-scores determine spatial randomness aggregation. analysis considers horizontal vertical adjacency (rook case) matrix.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/join_count.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test for Spatial Join Count Statistics — join_count","text":"Madden, L. V., Hughes, G., & van den Bosch, F. (2007). Study Plant Disease Epidemics. American Phytopathological Society.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Test — oruns_test","title":"Runs Test — oruns_test","text":"Perform runs test input data test clustering randomness.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Test — oruns_test","text":"","code":"oruns_test(x)"},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Test — oruns_test","text":"x numeric vector representing input data","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Test — oruns_test","text":"r4pde.oruns object. r4pde.oruns object list containing: U, number runs, EU, expected number runs, sU, standard deviation expected number runs Z, Z-score observed number runs, pvalue, p-value Z-score, result, test result either \"aggregation clustering\" \"randomness\"","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs Test — oruns_test","text":"","code":"oruns_test(c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)) #> Ordinary Runs Test of Data Sequence: #> ------------------------------------- #> Total Number of Runs (U): 7 #> Expected Number of Runs (EU): 5.80 #> Standard Deviation of Runs (sU): 1.42 #> Z-score: 0.84 #> P-value: 0.1996 #>  #> Interpretation: #> Based on the Z-score, the sequence exhibits 'randomness'."},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_boustrophedon.html","id":null,"dir":"Reference","previous_headings":"","what":"Boustrophedon Run Test for Binary Matrix — oruns_test_boustrophedon","title":"Boustrophedon Run Test for Binary Matrix — oruns_test_boustrophedon","text":"Applies ordinary runs test binary matrix using boustrophedon-style traversal. function supports two modes: row-wise column-wise boustrophedon. traversal flattens matrix 1D sequence tested using oruns_test.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_boustrophedon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boustrophedon Run Test for Binary Matrix — oruns_test_boustrophedon","text":"","code":"oruns_test_boustrophedon(mat)"},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_boustrophedon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boustrophedon Run Test for Binary Matrix — oruns_test_boustrophedon","text":"mat binary matrix (containing 0s 1s, possibly NAs).","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_boustrophedon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boustrophedon Run Test for Binary Matrix — oruns_test_boustrophedon","text":"list two elements: rowwise_boustrophedon List containing sequence result oruns_test row-wise traversal. colwise_boustrophedon List containing sequence result oruns_test column-wise traversal.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_byrowcol.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Test for Each Row and Column of a Binary Matrix — oruns_test_byrowcol","title":"Runs Test for Each Row and Column of a Binary Matrix — oruns_test_byrowcol","text":"Applies ordinary runs test row column binary matrix individually.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_byrowcol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Test for Each Row and Column of a Binary Matrix — oruns_test_byrowcol","text":"","code":"oruns_test_byrowcol(mat)"},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_byrowcol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Test for Each Row and Column of a Binary Matrix — oruns_test_byrowcol","text":"mat binary matrix (containing 0s 1s, possibly NAs).","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/oruns_test_byrowcol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Test for Each Row and Column of a Binary Matrix — oruns_test_byrowcol","text":"list four elements: row_results Data frame test results row. col_results Data frame test results column. row_summary Percentage summary interpretation rows. col_summary Percentage summary interpretation columns.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/plot_AFSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ASFD — plot_AFSD","title":"Plot ASFD — plot_AFSD","text":"function creates tile plot foci (cluster) identified AFSD function. colors cell foci labels centroid cluster foci ID. 'ggplot2' package used plot, automatically installed already present.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/plot_AFSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ASFD — plot_AFSD","text":"","code":"plot_AFSD(df)"},{"path":"https://emdelponte.github.io/r4pde/reference/plot_AFSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ASFD — plot_AFSD","text":"df dataframe containing least three columns: 'x', 'y', 'cluster_id'. 'x' 'y' spatial coordinates 'cluster_id' cluster identifier cell belongs.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/plot_AFSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ASFD — plot_AFSD","text":"ggplot object scatter plot foci (clusters).","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/plot_AFSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ASFD — plot_AFSD","text":"","code":"df <- data.frame(x = sample(1:100, 500, replace = TRUE),                  y = sample(1:100, 500, replace = TRUE),                  i = sample(0:1, 500, replace = TRUE, prob = c(0.7, 0.3)))  # Perform the AFSD result <- AFSD(df) # Plot the foci plot_AFSD(result[[3]])"},{"path":"https://emdelponte.github.io/r4pde/reference/theme_r4pde.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"function creates new ggplot2 theme modifying cowplot::theme_half_open theme. sets custom font size changes panel background color gray96.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/theme_r4pde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"","code":"theme_r4pde(font_size = 16)"},{"path":"https://emdelponte.github.io/r4pde/reference/theme_r4pde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"font_size base font size. Default 16.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/theme_r4pde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"ggplot2 theme object.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane.html","id":null,"dir":"Reference","previous_headings":"","what":"Window Pane for Epidemiological Analysis — windowpane","title":"Window Pane for Epidemiological Analysis — windowpane","text":"function calculates summary statistics within specified windows around given end date dataset, facilitating epidemiological analysis. allows backward, forward, directions window calculations based user-defined variable window lengths.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Window Pane for Epidemiological Analysis — windowpane","text":"","code":"windowpane(   data,   end_date_col,   date_col,   variable,   summary_type,   threshold = NULL,   window_lengths,   direction = \"backward\",   group_by_cols = NULL,   date_format = \"%Y-%m-%d\" )"},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Window Pane for Epidemiological Analysis — windowpane","text":"data data frame containing input data. end_date_col string specifying name column representing end date. date_col string specifying name column representing date variable. variable string specifying name column summary statistics calculated. summary_type string specifying type summary calculate. Options \"mean\", \"sum\", \"above_threshold\", \"below_threshold\". threshold Optional numeric value used summary_type \"above_threshold\" \"below_threshold\". window_lengths numeric vector specifying window lengths (days) calculations. direction string specifying direction window. Options \"backward\" (default), \"forward\", \"\". group_by_cols Optional vector strings specifying column names grouping data. date_format string specifying format date columns. Default \"%Y-%m-%d\".","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Window Pane for Epidemiological Analysis — windowpane","text":"data frame calculated summary values window.","code":""},{"path":[]},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Windowpane Tests for Correlation Analysis — windowpane_tests","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"function performs bootstrapped correlation analysis multiple predictors response variable. applies Simes method global significance testing calculates individual correlations, p-values, bootstrap statistics.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"","code":"windowpane_tests(   data,   response_var,   corr_type = \"spearman\",   R = 1000,   global_alpha = 0.05,   individual_alpha = 0.005 )"},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"data data frame containing predictors response variable. response_var string representing name response variable data frame. corr_type string specifying correlation method use; options \"spearman\" (default), \"pearson\", \"kendall\". R integer indicating number bootstrap replications. Default 1000. global_alpha numeric value representing global alpha level Simes correction. Default 0.05. individual_alpha numeric value individual alpha threshold testing individual predictors. Default 0.005.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"list containing following elements: results data frame columns: variable, correlation, p_value, mean_corr, sd_corr, median_corr, rank, simes_threshold, significant_simes, individual_significant. summary_table data frame summarizing global p-value (Pg) maximum correlation. global_significant logical value indicating whether global test significant.","code":""},{"path":"https://emdelponte.github.io/r4pde/reference/windowpane_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"function calculates correlations response variable predictor data frame, using bootstrapping generate mean, standard deviation, median estimates correlation. Simes correction applied control multiple testing, providing global p-value (Pg). function also returns maximum observed correlation.","code":""}]
