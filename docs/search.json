[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emerson Del Ponte. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Del Ponte E (2024). r4pde: Companion R4PDE book. R package version 0.0.0.9000.","code":"@Manual{,   title = {r4pde: Companion to R4PDE book},   author = {Emerson {Del Ponte}},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"r4pde","dir":"","previous_headings":"","what":"Companion to R4PDE book ","title":"Companion to R4PDE book ","text":"thrilled introduce r4pde, R package developed companion book “R Plant Disease Epidemiology” (R4PDE). companion package leverages power R empower researchers practitioners exploration plant disease epidemiology. process access suite specialized R functions data sets tailored specifically plant disease epidemiology analysis. package, combined invaluable insights guidance offered R4PDE, empowers unlock full potential R tackling complex challenges studying plant disease epidemics. development version r4pde available GitHub. remotes package, available CRAN, required installation.","code":"if (!require(remotes)) {   install.packages(\"remotes\") }  remotes::install_github(\"emdelponte/r4pde\")"},{"path":"/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Companion to R4PDE book ","text":"Please report issues bugs. code licensed MIT cite r4pde, please use output citation(“r4pde”)","code":""},{"path":"/reference/AFSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of foci structure and dynamics (AFSD) — AFSD","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"function performs analysis simple method introduced Nelson (1996) expanded Laranjeira et al. (1998). function assumes dataframe supplied input columns 'x', 'y', '', 'x' 'y' spatial coordinates '' disease indicator variable (1 diseased, otherwise 0). function performs several steps including filtering rows '' 1, converting adjacency matrix, creating foci using igraph. calculates various statistics foci returns list.","code":""},{"path":"/reference/AFSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"","code":"AFSD(df)"},{"path":"/reference/AFSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"df dataframe containing least three columns: 'x', 'y', ''. 'x' 'y' represent spatial coordinates '' disease indicator (1 diseased, otherwise 0).","code":""},{"path":"/reference/AFSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"list containing: cluster_summary2: dataframe summarizing number size foci, proportions diseased plants. cluster_df: dataframe containing foci information, including size number rows columns foci. df_clustered: original dataframe added 'focus_id' column, showing foci row belongs .","code":""},{"path":"/reference/AFSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of foci structure and dynamics (AFSD) — AFSD","text":"","code":"# Generate a sample dataframe set.seed(123) df <- data.frame(x = sample(1:100, 500, replace = TRUE),                  y = sample(1:100, 500, replace = TRUE),                  i = sample(0:1, 500, replace = TRUE, prob = c(0.7, 0.3)))  # Perform the AFSD result <- AFSD(df) #> Loading required package: igraph #>  #> Attaching package: ‘igraph’ #> The following objects are masked from ‘package:stats’: #>  #>     decompose, spectrum #> The following object is masked from ‘package:base’: #>  #>     union"},{"path":"/reference/BPL.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"function calculates Binary Power Law (BPL) parameters spatial disease patterns, fits linear model, performs hypothesis test slope.","code":""},{"path":"/reference/BPL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"","code":"BPL(data)"},{"path":"/reference/BPL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"data data frame containing following columns: field: field identifier. n: number observations quadrat. : incidence count quadrat.","code":""},{"path":"/reference/BPL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"list containing following elements: summary: data frame summarizing input data field, including total observations (n_total), mean incidence (incidence_mean), observed variance (V), binomial variance (Vbin). model_summary: summary linear model fitted log-transformed variances. hypothesis_test: result hypothesis test slope equal 1. ln_Ap: intercept linear model, representing natural logarithm parameter \\( A_p \\). slope: slope linear model.","code":""},{"path":"/reference/BPL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"function performs following steps: Summarizes data field calculate total number observations (n_total), mean incidence (incidence_mean), observed variance (V), binomial variance (Vbin). Log-transforms variances. Fits linear model log-transformed variances. Tests hypothesis slope linear model equal 1.","code":""},{"path":"/reference/BPL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Binary Power Law Analysis for Spatial Disease Patterns — BPL","text":"","code":"if (FALSE) { # Example usage with a sample data frame result <- BPL(FHBWheat) print(result$summary) print(result$model_summary) print(result$hypothesis_test) print(paste(\"ln(Ap):\", result$ln_Ap)) print(paste(\"Slope (b):\", result$slope)) }"},{"path":"/reference/BlastWheat.html","id":null,"dir":"Reference","previous_headings":"","what":"Wheat blast data in 143 field trials in Brazil — BlastWheat","title":"Wheat blast data in 143 field trials in Brazil — BlastWheat","text":"Data wheat blast incidence severity yield collected 143 wheat field trials Brazil","code":""},{"path":"/reference/BlastWheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wheat blast data in 143 field trials in Brazil — BlastWheat","text":"","code":"data(\"BlastWheat\")"},{"path":"/reference/BlastWheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Wheat blast data in 143 field trials in Brazil — BlastWheat","text":"data frame 143 observations following 10 variables. study numeric vector year numeric vector location character vector state character vector latitude numeric vector longitude numeric vector heading character vector inc_mean numeric vector index_mean numeric vector yld_mean numeric vector","code":""},{"path":[]},{"path":"/reference/BlastWheat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Wheat blast data in 143 field trials in Brazil — BlastWheat","text":"De Cól, M., Coelho, M., & Del Ponte, E. M. (2024). Weather-based logistic regression models predicting wheat head blast epidemics. Plant Disease, 108(7), 2206-2213.","code":""},{"path":[]},{"path":"/reference/BlastWheat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wheat blast data in 143 field trials in Brazil — BlastWheat","text":"","code":"data(BlastWheat) ## maybe str(BlastWheat) ; plot(BlastWheat) ..."},{"path":"/reference/BudBlightSoybean.html","id":null,"dir":"Reference","previous_headings":"","what":"Bud blight of soybean — BudBlightSoybean","title":"Bud blight of soybean — BudBlightSoybean","text":"Dataset progress curves found page 98 “Study Plant Disease Epidemics” (Madden et al. 2007). curves depict incidence soybean plants showing symptoms bud blight, caused tobacco streak virus. Four different treatments, corresponding different planting dates, evaluated using randomized complete block design four replicates. curve four time-based assessments.","code":""},{"path":"/reference/BudBlightSoybean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bud blight of soybean — BudBlightSoybean","text":"","code":"data(\"BudBlightSoybean\")"},{"path":"/reference/BudBlightSoybean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bud blight of soybean — BudBlightSoybean","text":"data frame 64 observations following 4 variables. treat character vector time numeric vector block numeric vector y numeric vector","code":""},{"path":[]},{"path":"/reference/BudBlightSoybean.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bud blight of soybean — BudBlightSoybean","text":"Madden, L. V., Hughes, G., & Van Den Bosch, F. (2007). study plant disease epidemics.","code":""},{"path":[]},{"path":"/reference/BudBlightSoybean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bud blight of soybean — BudBlightSoybean","text":"","code":"data(BudBlightSoybean)"},{"path":"/reference/CompMuCens.html","id":null,"dir":"Reference","previous_headings":"","what":"Survival analysis for quantitative ordinal scale data. — CompMuCens","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"Survival analysis quantitative ordinal scale data.","code":""},{"path":"/reference/CompMuCens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"","code":"CompMuCens(dat, scale, grade = T, ckData = F)"},{"path":"/reference/CompMuCens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"dat Data frame containing data processed. scale numeric vector indicating scale order classes. grade Logical. TRUE, uses class value. FALSE, uses NPE (Non-Parametric Estimate). ckData Logical. TRUE, returns input data along results. FALSE, returns results.","code":""},{"path":"/reference/CompMuCens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"Returns list containing score statistic, hypothesis tests, adjusted significance level, conclusion based pairwise comparisons.","code":""},{"path":"/reference/CompMuCens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"assist plant pathologists analyzing quantitative ordinal scale data encourage uptake interval-censored analysis method, Chiang collaborators developed function provided comprehensive explanation program code used implement class ratings analyzed method repository: https://github.com/StatisticalMethodsinPlantProtection/CompMuCens According results paper, method can applied reduce risk type II errors considering quantitative ordinal data, widely used plant pathology related disciplines.function starts converting data censored data format performs multiple pairwise comparisons determine significance using score statistic method.","code":""},{"path":"/reference/CompMuCens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"Chiang, K.S., Chang, Y.M., Liu, H.., Lee, J.Y., El Jarroudi, M. Bock, C., 2023. Survival Analysis Basis Test Hypotheses Using Quantitative Ordinal Scale Disease Severity Data. Phytopathology, press. Available : https://apsjournals.apsnet.org/doi/abs/10.1094/PHYTO-02-23-0055-R","code":""},{"path":"/reference/CompMuCens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survival analysis for quantitative ordinal scale data. — CompMuCens","text":"","code":"# Entering your data as ordinal rating scores trAs=c(5,4,2,5,5,4,4,2,5,2,2,3,4,3,2,2,6,2,2,4,2,4,2,4,5,3,4,2,2,3) trBs=c(5,3,2,4,4,5,4,5,4,4,6,4,5,5,5,2,6,2,3,5,2,6,4,3,2,5,3,5,4,5) trCs=c(2,3,1,4,1,1,4,1,1,3,2,1,4,1,1,2,5,2,1,3,1,4,2,2,2,4,2,3,2,2) trDs=c(5,5,4,5,5,6,6,4,6,4,3,5,5,6,4,6,5,6,5,4,5,5,5,3,5,6,5,5,5,6) # Data shaping into input format inputData = data.frame(treatment=c(rep(\"A\",30),rep(\"B\",30),rep(\"C\",30), rep(\"D\",30)), x=c(trAs, trBs, trCs, trDs)) # Perform analysis using CompMuCens() function CompMuCens(dat=inputData, scale=c(0,3,6,12,25,50,75,88,94,97,100,100),ckData=TRUE) #> Loading required package: survival #> Loading required package: perm #> Loading required package: Icens #> Warning: package ‘Icens’ was built under R version 4.1.1 #> Loading required package: MLEcens #> Depends on Icens package available on bioconductor.  #> To install use for example: #> install.packages('BiocManager') #> BiocManager::install('Icens') #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:igraph’: #>  #>     as_data_frame, groups, union #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> $inputData #>     treatment ClassValue intervals #> 1           A          5  [12, 25] #> 2           A          4  [ 6, 12] #> 3           A          2  [ 0,  3] #> 4           A          5  [12, 25] #> 5           A          5  [12, 25] #> 6           A          4  [ 6, 12] #> 7           A          4  [ 6, 12] #> 8           A          2  [ 0,  3] #> 9           A          5  [12, 25] #> 10          A          2  [ 0,  3] #> 11          A          2  [ 0,  3] #> 12          A          3  [ 3,  6] #> 13          A          4  [ 6, 12] #> 14          A          3  [ 3,  6] #> 15          A          2  [ 0,  3] #> 16          A          2  [ 0,  3] #> 17          A          6  [25, 50] #> 18          A          2  [ 0,  3] #> 19          A          2  [ 0,  3] #> 20          A          4  [ 6, 12] #> 21          A          2  [ 0,  3] #> 22          A          4  [ 6, 12] #> 23          A          2  [ 0,  3] #> 24          A          4  [ 6, 12] #> 25          A          5  [12, 25] #> 26          A          3  [ 3,  6] #> 27          A          4  [ 6, 12] #> 28          A          2  [ 0,  3] #> 29          A          2  [ 0,  3] #> 30          A          3  [ 3,  6] #> 31          B          5  [12, 25] #> 32          B          3  [ 3,  6] #> 33          B          2  [ 0,  3] #> 34          B          4  [ 6, 12] #> 35          B          4  [ 6, 12] #> 36          B          5  [12, 25] #> 37          B          4  [ 6, 12] #> 38          B          5  [12, 25] #> 39          B          4  [ 6, 12] #> 40          B          4  [ 6, 12] #> 41          B          6  [25, 50] #> 42          B          4  [ 6, 12] #> 43          B          5  [12, 25] #> 44          B          5  [12, 25] #> 45          B          5  [12, 25] #> 46          B          2  [ 0,  3] #> 47          B          6  [25, 50] #> 48          B          2  [ 0,  3] #> 49          B          3  [ 3,  6] #> 50          B          5  [12, 25] #> 51          B          2  [ 0,  3] #> 52          B          6  [25, 50] #> 53          B          4  [ 6, 12] #> 54          B          3  [ 3,  6] #> 55          B          2  [ 0,  3] #> 56          B          5  [12, 25] #> 57          B          3  [ 3,  6] #> 58          B          5  [12, 25] #> 59          B          4  [ 6, 12] #> 60          B          5  [12, 25] #> 61          C          2  [ 0,  3] #> 62          C          3  [ 3,  6] #> 63          C          1         0 #> 64          C          4  [ 6, 12] #> 65          C          1         0 #> 66          C          1         0 #> 67          C          4  [ 6, 12] #> 68          C          1         0 #> 69          C          1         0 #> 70          C          3  [ 3,  6] #> 71          C          2  [ 0,  3] #> 72          C          1         0 #> 73          C          4  [ 6, 12] #> 74          C          1         0 #> 75          C          1         0 #> 76          C          2  [ 0,  3] #> 77          C          5  [12, 25] #> 78          C          2  [ 0,  3] #> 79          C          1         0 #> 80          C          3  [ 3,  6] #> 81          C          1         0 #> 82          C          4  [ 6, 12] #> 83          C          2  [ 0,  3] #> 84          C          2  [ 0,  3] #> 85          C          2  [ 0,  3] #> 86          C          4  [ 6, 12] #> 87          C          2  [ 0,  3] #> 88          C          3  [ 3,  6] #> 89          C          2  [ 0,  3] #> 90          C          2  [ 0,  3] #> 91          D          5  [12, 25] #> 92          D          5  [12, 25] #> 93          D          4  [ 6, 12] #> 94          D          5  [12, 25] #> 95          D          5  [12, 25] #> 96          D          6  [25, 50] #> 97          D          6  [25, 50] #> 98          D          4  [ 6, 12] #> 99          D          6  [25, 50] #> 100         D          4  [ 6, 12] #> 101         D          3  [ 3,  6] #> 102         D          5  [12, 25] #> 103         D          5  [12, 25] #> 104         D          6  [25, 50] #> 105         D          4  [ 6, 12] #> 106         D          6  [25, 50] #> 107         D          5  [12, 25] #> 108         D          6  [25, 50] #> 109         D          5  [12, 25] #> 110         D          4  [ 6, 12] #> 111         D          5  [12, 25] #> 112         D          5  [12, 25] #> 113         D          5  [12, 25] #> 114         D          3  [ 3,  6] #> 115         D          5  [12, 25] #> 116         D          6  [25, 50] #> 117         D          5  [12, 25] #> 118         D          5  [12, 25] #> 119         D          5  [12, 25] #> 120         D          6  [25, 50] #>  #> $U.Score #>   treatment      score #> 1         D -15.125000 #> 2         B  -4.541667 #> 3         A   4.225000 #> 4         C  15.441667 #>  #> $Hypothesis.test #>   treat1 treat2 p-value for H0: treat1 ≤ treat2 p-value for H0: treat1 = treat2 #> 1      D      B                    0.0018767018                              NA #> 2      B      A                    0.0113215174                              NA #> 3      A      C                    0.0007456484                              NA #>  #> $adj.Signif #> [1] 0.01666667 #>  #> $Conclusion #> [1] \"D>B>A>C\" #>"},{"path":"/reference/DSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"function calculates Disease Severity Index (DSI) based provided unit, class, maximum class value. DSI computed aggregating classes, calculating weights multiplying frequency class class , dividing sum weights product total number entries maximum class value, multiplying 100.","code":""},{"path":"/reference/DSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"","code":"DSI(unit, class, max)"},{"path":"/reference/DSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"unit vector representing units. class vector representing classes corresponding units. max numeric value representing maximum possible class value.","code":""},{"path":"/reference/DSI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"Returns single numeric value representing DSI.","code":""},{"path":"/reference/DSI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Disease Severity Index (DSI) (class for each unit) — DSI","text":"","code":"# Example usage: unit <- c(1, 2, 3, 4, 5, 6) class <- c(1, 2, 1, 2, 3, 1) max <- 3 DSI(unit, class, max) #> [1] 55.55556"},{"path":"/reference/DSI2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"function calculates Disease Severity Index (DSI) given vector classes, vector frequencies, maximum possible class value. DSI calculated weighted sum class values, class multiplied corresponding frequency, divided product total frequency maximum class value, finally multiplied 100 get percentage.","code":""},{"path":"/reference/DSI2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"","code":"DSI2(class, freq, max)"},{"path":"/reference/DSI2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"class numeric vector representing classes. freq numeric vector representing frequency class. Must length 'class'. max numeric value representing maximum possible class value.","code":""},{"path":"/reference/DSI2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"Returns single numeric value representing DSI.","code":""},{"path":"/reference/DSI2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Disease severity Index (DSI) (frequency of each class) — DSI2","text":"","code":"DSI2(c(0, 1, 2, 3, 4), c(2, 0, 5, 0, 5), 4) #> [1] 62.5"},{"path":"/reference/DidymellaWatermelon.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"Data paper 'Temporal spatial dynamics watermelon gummy stem blight epidemics'.","code":""},{"path":"/reference/DidymellaWatermelon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"","code":"data(\"DidymellaWatermelon\")"},{"path":"/reference/DidymellaWatermelon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"data frame 1,344 observations following 4 variables. dap integer vector. Represents 'days planting'. NS_col integer vector. Represents North-South column position. EW_row integer vector. Represents East-West row position. severity integer vector. Represents severity (0 4 scale) gummy stem blight.","code":""},{"path":"/reference/DidymellaWatermelon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"details","code":""},{"path":"/reference/DidymellaWatermelon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"Café-Filho, .C., Santos, G.R. & Laranjeira, F.F. Temporal spatial dynamics watermelon gummy stem blight epidemics. Eur J Plant Pathol 128, 473–482 (2010). https://doi.org/10.1007/s10658-010-9674-1","code":""},{"path":"/reference/DidymellaWatermelon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"references","code":""},{"path":"/reference/DidymellaWatermelon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial data on gummy stem blight of watermelon — DidymellaWatermelon","text":"","code":"data(DidymellaWatermelon)   head(DidymellaWatermelon) #> # A tibble: 6 × 4 #>     dap NS_col EW_row severity #>   <int>  <int>  <int>    <int> #> 1    50      1      1        0 #> 2    50      1      2        0 #> 3    50      1      3        0 #> 4    50      1      4        0 #> 5    50      1      5        0 #> 6    50      1      6        0"},{"path":"/reference/FHBWheat.html","id":null,"dir":"Reference","previous_headings":"","what":"FHB collected at 153 fiels in Brazil — FHBWheat","title":"FHB collected at 153 fiels in Brazil — FHBWheat","text":"FHB collected 20 quadrats per field 153 fields Brazil","code":""},{"path":"/reference/FHBWheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FHB collected at 153 fiels in Brazil — FHBWheat","text":"","code":"data(\"FHBWheat\")"},{"path":"/reference/FHBWheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FHB collected at 153 fiels in Brazil — FHBWheat","text":"data frame 3060 observations following 4 variables. campo numeric vector quadrat numeric vector n numeric vector numeric vector","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/FHBWheat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FHB collected at 153 fiels in Brazil — FHBWheat","text":"","code":"data(FHBWheat) ## maybe str(FHBWheat) ; plot(FHBWheat) ..."},{"path":"/reference/FusariumBanana.html","id":null,"dir":"Reference","previous_headings":"","what":"Fusarium Wilt on Bananas — FusariumBanana","title":"Fusarium Wilt on Bananas — FusariumBanana","text":"Dataset location diseased banana plants","code":""},{"path":"/reference/FusariumBanana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fusarium Wilt on Bananas — FusariumBanana","text":"","code":"data(\"FusariumBanana\")"},{"path":"/reference/FusariumBanana.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fusarium Wilt on Bananas — FusariumBanana","text":"data frame 163 observations following 4 variables. lon numeric vector lat numeric vector marker character vector field numeric vector","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"/reference/FusariumBanana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fusarium Wilt on Bananas — FusariumBanana","text":"","code":"data(FusariumBanana) ## maybe str(FusariumBanana) ; plot(FusariumBanana) ..."},{"path":"/reference/RustSoybean.html","id":null,"dir":"Reference","previous_headings":"","what":"Soybean rust severity in Brazil — RustSoybean","title":"Soybean rust severity in Brazil — RustSoybean","text":"Soybean rust severity","code":""},{"path":"/reference/RustSoybean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Soybean rust severity in Brazil — RustSoybean","text":"","code":"data(\"RustSoybean\")"},{"path":"/reference/RustSoybean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Soybean rust severity in Brazil — RustSoybean","text":"data frame 34 observations following 7 variables. epidemia numeric vector latitude numeric vector longitude numeric vector local character vector planting Date detection Date severity numeric vector","code":""},{"path":"/reference/RustSoybean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Soybean rust severity in Brazil — RustSoybean","text":"Text","code":""},{"path":"/reference/RustSoybean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Soybean rust severity in Brazil — RustSoybean","text":"Del Ponte et al. (2006)","code":""},{"path":"/reference/RustSoybean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Soybean rust severity in Brazil — RustSoybean","text":"","code":"data(RustSoybean) ## maybe str(RustSoybean) ; plot(RustSoybean) ..."},{"path":"/reference/SpatialAggregated.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated aggregated spatial xy data — SpatialAggregated","title":"Simulated aggregated spatial xy data — SpatialAggregated","text":"simulation 200-point spatial xy data using Shiny app https://delponte.shinyapps.io/spatial/","code":""},{"path":"/reference/SpatialAggregated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated aggregated spatial xy data — SpatialAggregated","text":"","code":"data(\"SpatialAggregated\")"},{"path":"/reference/SpatialAggregated.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated aggregated spatial xy data — SpatialAggregated","text":"data frame 208 observations following 2 variables. x numeric vector y numeric vector","code":""},{"path":"/reference/SpatialAggregated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated aggregated spatial xy data — SpatialAggregated","text":"Simulation 20 clusters standard deviation 10 defined ap","code":""},{"path":"/reference/SpatialAggregated.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated aggregated spatial xy data — SpatialAggregated","text":"https://delponte.shinyapps.io/spatial/","code":""},{"path":"/reference/SpatialAggregated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated aggregated spatial xy data — SpatialAggregated","text":"","code":"data(SpatialAggregated) ## maybe str(SpatialAggregated) ; plot(SpatialAggregated) ..."},{"path":"/reference/SpatialRandom.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated random spatial xy data — SpatialRandom","title":"Simulated random spatial xy data — SpatialRandom","text":"simulation 200-point spatial xy data using Shiny app https://delponte.shinyapps.io/spatial/","code":""},{"path":"/reference/SpatialRandom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated random spatial xy data — SpatialRandom","text":"","code":"data(\"SpatialRandom\")"},{"path":"/reference/SpatialRandom.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated random spatial xy data — SpatialRandom","text":"data frame 200 observations following 2 variables. x numeric vector y numeric vector","code":""},{"path":"/reference/SpatialRandom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulated random spatial xy data — SpatialRandom","text":"random simulation","code":""},{"path":"/reference/SpatialRandom.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated random spatial xy data — SpatialRandom","text":"https://delponte.shinyapps.io/spatial/","code":""},{"path":"/reference/SpatialRandom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated random spatial xy data — SpatialRandom","text":"","code":"data(SpatialRandom) ## maybe str(SpatialRandom) ; plot(SpatialRandom) ..."},{"path":"/reference/WhiteMoldSoybean.html","id":null,"dir":"Reference","previous_headings":"","what":"White mold on soybean in Brazil — WhiteMoldSoybean","title":"White mold on soybean in Brazil — WhiteMoldSoybean","text":"raw data organized long tidy format treatment (observation) fungicide trial (hereafter study) placed row variable column.","code":""},{"path":"/reference/WhiteMoldSoybean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"White mold on soybean in Brazil — WhiteMoldSoybean","text":"","code":"data(\"WhiteMoldSoybean\")"},{"path":"/reference/WhiteMoldSoybean.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"White mold on soybean in Brazil — WhiteMoldSoybean","text":"data frame 382 observations following 17 variables. study numeric vector treat numeric vector season character vector harvest_year numeric vector location character vector state character vector country character vector elevation numeric vector region character vector elevation_class character vector inc_check numeric vector inc_class character vector yld_check numeric vector yld_class character vector inc numeric vector scl numeric vector yld numeric vector","code":""},{"path":"/reference/WhiteMoldSoybean.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"White mold on soybean in Brazil — WhiteMoldSoybean","text":"https://github.com/emdelponte/paper-white-mold-meta-analysis","code":""},{"path":"/reference/WhiteMoldSoybean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"White mold on soybean in Brazil — WhiteMoldSoybean","text":"Lehner, M. S., Pethybridge, S. J., Meyer, M. C., Del Ponte, E. M. 2016. Meta-analytic modelling incidenceyield incidencesclerotial production relationships soybean white mould epidemics. Plant Pathology. 66:460–468 Available : http://dx.doi.org/10.1111/ppa.12590.","code":""},{"path":"/reference/WhiteMoldSoybean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"White mold on soybean in Brazil — WhiteMoldSoybean","text":"","code":"data(WhiteMoldSoybean) ## maybe str(WhiteMoldSoybean) ; plot(WhiteMoldSoybean) ..."},{"path":"/reference/count_subarea.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","title":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","text":"function takes matrix 0s 1s counts number 1s subarea matrix. subareas defined number rows columns subarea contains. function returns data frame includes position (starting row column) subarea count 1s.","code":""},{"path":"/reference/count_subarea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","text":"","code":"count_subarea(data, rows, cols)"},{"path":"/reference/count_subarea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","text":"data matrix 0s 1s want analyze. rows number rows subarea. cols number columns subarea.","code":""},{"path":"/reference/count_subarea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","text":"dataframe one row subarea following columns: Row_Start: first row subarea original matrix. Col_Start: first column subarea original matrix. Ones_Count: number ones subarea.","code":""},{"path":"/reference/count_subarea.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","text":"function written divides original matrix subareas based specified number rows columns subarea counts number ones subareas. way structured, handles matrices even dimensions quite efficiently. However, number rows columns original matrix multiple subarea dimensions, parts matrix included subarea.","code":""},{"path":"/reference/count_subarea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count the number of ones (diseased plants) in subareas of a matrix — count_subarea","text":"","code":"if (FALSE) { # Create a sample matrix with random 0s and 1s set.seed(123) # for reproducibility my_data <- matrix(sample(c(0, 1), 12*16, replace = TRUE), nrow = 16, ncol = 12)  # Apply the function to count 1's in each 3x3 subarea result <- count_subarea(data = my_data, rows = 3, cols = 3) print(result)  # The resulting dataframe can be further used for visualization, for example, with ggplot2. }"},{"path":"/reference/doublets.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Doublets Test — doublets.test","title":"Doublets Test — doublets.test","text":"Perform doublets test input data test aggregation clustering randomness.","code":""},{"path":"/reference/doublets.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Doublets Test — doublets.test","text":"","code":"doublets.test(x)"},{"path":"/reference/doublets.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Doublets Test — doublets.test","text":"x numeric vector representing input data","code":""},{"path":"/reference/doublets.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Doublets Test — doublets.test","text":"list elements Db (number doublets), EDb (expected number doublets), pvalue, result (either \"aggregation clustering\" \"randomness\").","code":""},{"path":"/reference/doublets.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Doublets Test — doublets.test","text":"","code":"doublets.test(c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)) #> $Db #> [1] 2 #>  #> $EDb #> [1] 3 #>  #> $ZDb #> [1] -0.6454972 #>  #> $pvalue #> [1] 0.2593025 #>  #> $result #> [1] \"randomness\" #>"},{"path":"/reference/fit_gradients.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Gradient Models to Data — fit_gradients","title":"Fit Gradient Models to Data — fit_gradients","text":"function fits three gradient models (exponential, power, modified power) given data. ranks models based R-squared values returns diagnostic plots model.","code":""},{"path":"/reference/fit_gradients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Gradient Models to Data — fit_gradients","text":"","code":"fit_gradients(data, C = 1)"},{"path":"/reference/fit_gradients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Gradient Models to Data — fit_gradients","text":"data dataframe containing data, columns \"x\" representing distances \"Y\" representing corresponding measurements counts. C constant used modified power model. Defaults 1.","code":""},{"path":"/reference/fit_gradients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Gradient Models to Data — fit_gradients","text":"list containing: dataThe input data, include additional column 'mod_x'. results_tableA table model parameters R-squared values. plot_exponentialDiagnostic plot exponential model. plot_powerDiagnostic plot power model. plot_modified_powerDiagnostic plot modified power model. plot_exponential_originalPlot original data exponential model fit. plot_power_originalPlot original data power model fit. plot_modified_power_originalPlot original data modified power model fit.","code":""},{"path":"/reference/fit_gradients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Gradient Models to Data — fit_gradients","text":"","code":"x <- c(0.8, 1.6, 2.4, 3.2, 4, 7.2, 12, 15.2, 21.6, 28.8) Y <- c(184.9, 113.3, 113.3, 64.1, 25, 8, 4.3, 2.5, 1, 0.8) grad1 <- data.frame(x = x, Y = Y) library(ggplot2) mg <- fit_gradients(grad1, C = 0.4) mg$plot_power_original +   labs(title = \"\", x = \"Distance from focus (m)\", y = \"Count of lesions\")"},{"path":"/reference/get_nasapower.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"function downloads daily NASA POWER data specified weather variables specified number days around given date column multiple locations. includes progress bar show download progress.","code":""},{"path":"/reference/get_nasapower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"","code":"get_nasapower(   data,   days_around,   date_col,   pars = c(\"T2M\", \"RH2M\", \"PRECTOTCORR\", \"T2M_MAX\", \"T2M_MIN\", \"T2MDEW\") )"},{"path":"/reference/get_nasapower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"data data frame containing input data, including columns latitude, longitude, study identifier, date column. days_around integer specifying number days date date column download data. date_col character string specifying name date column data frame. pars character vector specifying weather variables fetch NASA POWER (default: c(\"T2M\", \"RH2M\", \"PRECTOTCORR\", \"T2M_MAX\", \"T2M_MIN\", \"T2MDEW\")).","code":""},{"path":"/reference/get_nasapower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"data frame downloaded weather data NASA POWER, combined specified locations. Includes new variable study indicating study identifier input data. Returns empty data frame data retrieved.","code":""},{"path":"/reference/get_nasapower.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"function uses get_power function nasapower package fetch weather data range dates around specified date column location. progress bar shown data download process, results combined single data frame.","code":""},{"path":"/reference/get_nasapower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch NASA POWER Data for Multiple Locations with a Progress Bar — get_nasapower","text":"","code":"if (FALSE) { # Sample data data <- data.frame(   study = c(\"Study1\", \"Study2\"),   latitude = c(-15.78, -20.45),   longitude = c(-47.93, -54.82),   heading = c(\"2022-05-10\", \"2022-05-15\") )  # Fetch weather data with a progress bar results <- get_nasapower(data, days_around = 28, date_col = \"heading\") }"},{"path":"/reference/join_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Spatial Join Count Statistics — join_count","title":"Test for Spatial Join Count Statistics — join_count","text":"function join_count calculates spatial join count statistics binary matrix, identifying patterns aggregation randomness.","code":""},{"path":"/reference/join_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Spatial Join Count Statistics — join_count","text":"","code":"join_count(matrix_data)"},{"path":"/reference/join_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Spatial Join Count Statistics — join_count","text":"matrix_data binary matrix (elements 0 1) representing spatial distribution two types points: 0 healthy plants (H) 1 diseased plants (D). matrix reflects geographical distribution layout plants studied area.","code":""},{"path":"/reference/join_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Spatial Join Count Statistics — join_count","text":"comprehensive, rich-text formatted string results includes: Statistical counts specific binary sequences (e.g., \"01 10\", \"11\") Expected counts assumption Complete Spatial Randomness (CSR) Standard deviations Z-scores (ZHD \"01 10\" sequences, ZDD \"11\" sequences) Interpretation whether spatial distribution sequence type \"Aggregated\" \"Aggregated\" based Z-scores summary explaining implications statistics patterns return value aims provide clear understanding spatial arrangement's characteristics, aiding spatial analysis research.","code":""},{"path":"/reference/join_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test for Spatial Join Count Statistics — join_count","text":"function conducts analysis first counting occurrence specific sequences (\"01 10\" \"11\" - equivalent HD DD) binary matrix. calculates expected values, standard deviations, Z-scores determine spatial randomness aggregation. analysis considers horizontal vertical adjacency (rook case) matrix.","code":""},{"path":"/reference/join_count.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Test for Spatial Join Count Statistics — join_count","text":"Madden, L. V., Hughes, G., & van den Bosch, F. (2007). Study Plant Disease Epidemics. American Phytopathological Society.","code":""},{"path":"/reference/join_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Spatial Join Count Statistics — join_count","text":"","code":"if (FALSE) { matrix_data <- matrix(c(1,1,1,0,0,                         1,1,1,0,0,                         1,1,1,0,0,                         1,1,1,0,0,                         0,0,0,0,0),                         ncol = 5, byrow = TRUE) result_text <- join_count(matrix_data) cat(result_text)  # Print the rich text output }"},{"path":"/reference/oruns.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Test — oruns.test","title":"Runs Test — oruns.test","text":"Perform runs test input data test clustering randomness.","code":""},{"path":"/reference/oruns.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Test — oruns.test","text":"","code":"oruns.test(x)"},{"path":"/reference/oruns.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Test — oruns.test","text":"x numeric vector representing input data","code":""},{"path":"/reference/oruns.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Test — oruns.test","text":"list elements U (number runs), EU (expected number runs), pvalue, result (either \"clustering\" \"randomness\").","code":""},{"path":"/reference/oruns.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs Test — oruns.test","text":"","code":"oruns.test(c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)) #> $U #> [1] 7 #>  #> $EU #> [1] 5.8 #>  #> $Z #> [1] 0.8429272 #>  #> $pvalue #> [1] 0.1996346 #>  #> $result #> [1] \"aggregation or clustering\" #>"},{"path":"/reference/oruns_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs Test — oruns_test","title":"Runs Test — oruns_test","text":"Perform runs test input data test clustering randomness.","code":""},{"path":"/reference/oruns_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs Test — oruns_test","text":"","code":"oruns_test(x)"},{"path":"/reference/oruns_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs Test — oruns_test","text":"x numeric vector representing input data","code":""},{"path":"/reference/oruns_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs Test — oruns_test","text":"r4pde.oruns object. r4pde.oruns object list containing: U, number runs, EU, expected number runs, sU, standard deviation expected number runs Z, Z-score observed number runs, pvalue, p-value Z-score, result, test result either \"aggregation clustering\" \"randomness\"","code":""},{"path":"/reference/oruns_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Runs Test — oruns_test","text":"","code":"oruns_test(c(1, 0, 1, 1, 0, 1, 0, 0, 1, 1)) #> Ordinary Runs Test of Data Sequence: #> ------------------------------------- #> Total Number of Runs (U): 7 #> Expected Number of Runs (EU): 5.80 #> Standard Deviation of Runs (sU): 1.42 #> Z-score: 0.84 #> P-value: 0.8429 #>  #> Interpretation: #> Based on the Z-score, the sequence exhibits 'randomness'."},{"path":"/reference/plot_AFSD.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ASFD — plot_AFSD","title":"Plot ASFD — plot_AFSD","text":"function creates tile plot foci (cluster) identified AFSD function. colors cell foci labels centroid cluster foci ID. 'ggplot2' package used plot, automatically installed already present.","code":""},{"path":"/reference/plot_AFSD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ASFD — plot_AFSD","text":"","code":"plot_AFSD(df)"},{"path":"/reference/plot_AFSD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ASFD — plot_AFSD","text":"df dataframe containing least three columns: 'x', 'y', 'cluster_id'. 'x' 'y' spatial coordinates 'cluster_id' cluster identifier cell belongs.","code":""},{"path":"/reference/plot_AFSD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ASFD — plot_AFSD","text":"ggplot object scatter plot foci (clusters).","code":""},{"path":"/reference/plot_AFSD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ASFD — plot_AFSD","text":"","code":"df <- data.frame(x = sample(1:100, 500, replace = TRUE),                  y = sample(1:100, 500, replace = TRUE),                  i = sample(0:1, 500, replace = TRUE, prob = c(0.7, 0.3)))  # Perform the AFSD result <- AFSD(df) # Plot the foci plot_AFSD(result[[3]])"},{"path":"/reference/theme_r4pde.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"function creates new ggplot2 theme modifying cowplot::theme_half_open theme. sets custom font size changes panel background color gray96.","code":""},{"path":"/reference/theme_r4pde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"","code":"theme_r4pde(font_size = 16)"},{"path":"/reference/theme_r4pde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"font_size base font size. Default 16.","code":""},{"path":"/reference/theme_r4pde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom ggplot2 theme based on cowplot::theme_half_open — theme_r4pde","text":"ggplot2 theme object.","code":""},{"path":"/reference/windowpane.html","id":null,"dir":"Reference","previous_headings":"","what":"Window Pane for Epidemiological Analysis — windowpane","title":"Window Pane for Epidemiological Analysis — windowpane","text":"function calculates summary statistics within specified windows around given end date dataset, facilitating epidemiological analysis. allows backward forward window calculations based user-defined variable window lengths.","code":""},{"path":"/reference/windowpane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Window Pane for Epidemiological Analysis — windowpane","text":"","code":"windowpane(   data,   end_date_col,   date_col,   variable,   summary_type,   threshold = NULL,   window_lengths,   direction = \"backward\",   group_by_cols = NULL,   date_format = \"%Y-%m-%d\" )"},{"path":"/reference/windowpane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Window Pane for Epidemiological Analysis — windowpane","text":"data dataframe containing input data. end_date_col name column representing end date. date_col name column representing date variable. variable name column summary statistics calculated. summary_type type summary calculate. Options \"mean\", \"sum\", \"above_threshold\", \"below_threshold\". threshold Optional numeric value used summary_type \"above_threshold\" \"below_threshold\". window_lengths vector window lengths (days) calculations. direction direction window. Options \"backward\" (default) \"forward\". group_by_cols Optional vector column names grouping data. date_format format date columns. Default \"%Y-%m-%d\".","code":""},{"path":"/reference/windowpane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Window Pane for Epidemiological Analysis — windowpane","text":"dataframe calculated summary values window.","code":""},{"path":"/reference/windowpane_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Windowpane Tests for Correlation Analysis — windowpane_tests","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"function performs bootstrapped correlation analysis multiple predictors response variable. applies Simes method global significance testing calculates individual correlations, p-values, bootstrap statistics.","code":""},{"path":"/reference/windowpane_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"","code":"windowpane_tests(   data,   response_var,   corr_type = \"spearman\",   R = 1000,   global_alpha = 0.05,   individual_alpha = 0.005 )"},{"path":"/reference/windowpane_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"data data frame containing predictors response variable. response_var string representing name response variable data frame. corr_type string specifying correlation method use; options \"spearman\" (default), \"pearson\", \"kendall\". R integer indicating number bootstrap replications. Default 1000. global_alpha numeric value representing global alpha level Simes correction. Default 0.05. individual_alpha numeric value individual alpha threshold testing individual predictors. Default 0.005.","code":""},{"path":"/reference/windowpane_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"list containing following elements: results data frame columns: variable, correlation, p_value, mean_corr, sd_corr, median_corr, rank, simes_threshold, significant_simes, individual_significant. summary_table data frame summarizing global p-value (Pg) maximum correlation. global_significant logical value indicating whether global test significant.","code":""},{"path":"/reference/windowpane_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"function calculates correlations response variable predictor data frame, using bootstrapping generate mean, standard deviation, median estimates correlation. Simes correction applied control multiple testing, providing global p-value (Pg). function also returns maximum observed correlation.","code":""},{"path":"/reference/windowpane_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Windowpane Tests for Correlation Analysis — windowpane_tests","text":"","code":"# Example usage data <- data.frame(x1 = rnorm(100), x2 = rnorm(100), y = rnorm(100)) result <- windowpane_tests(data, \"y\", corr_type = \"spearman\", R = 500) result$results #>   variable correlation    p_value  mean_corr   sd_corr median_corr rank m #> 1       x2   0.1766337 0.07875094  0.1653792 0.1026392   0.1685394    1 2 #> 2       x1  -0.1663486 0.09810340 -0.1719860 0.1031982  -0.1724914    2 2 #>   simes_threshold significant_simes individual_significant #> 1           0.025             FALSE                  FALSE #> 2           0.050             FALSE                  FALSE result$summary_table #>                Metric     Value #> 1 Global P-value (Pg) 0.0981034 #> 2     Max Correlation 0.1766337"}]
